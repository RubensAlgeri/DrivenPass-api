generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  credential Credential[]
  safeNote SafeNote[]
  card Card[]
  wifiPassword WifiPassword[]

  @@map("users")
}

model Credential {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  title String @db.VarChar(50)
  url String
  password String

  @@unique([title,userId])
  @@map("credentials")
}

model SafeNote {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  title String @db.VarChar(50)
  annotation String @db.VarChar(1000)

  @@unique([title,userId])
  @@map("safeNotes")
}

enum CardType {
  credit
  debit
  credit_debit
}

model Card {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  title String @db.VarChar(50)
  number String
  holderName String
  cvv String
  expirationDate String
  password String
  isVirtual Boolean
  type CardType

  @@unique([title,userId])
  @@map("cards")
}

model WifiPassword {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  title String @db.VarChar(50)
  netName String
  password String

  @@unique([title,userId])
  @@map("wifiPasswords")
}